<div class="content-wrapper">
  <div class="content-header">
    <div class="container-fluid">
      <div class="row mb-2">
        <div class="col-sm-12">
          <ol class="breadcrumb float-sm-left">
            <li class="breadcrumb-item"><a href="/warehouse/warehouse-check-reserve">Склад</a></li>
            <li class="breadcrumb-item active font-weight-bold">Пополнять Резерв</li>
          </ol>
        </div>
      </div>
    </div>
  </div>
  
  <div class="content">
    <div class="container-fluid">
      <div class="row">
        <div class="col-md-12">
          <div class="card card-success">
            <div class="card-header">
              <h3 class="card-title">Пополнить Резерв</h3>
            </div>
            <div class="card-body">
              <div class="row">
                  <div class="col-12">
                    {{#if success}}
                      <div class="alert alert-success alert-dismissible fade show">
                      <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <span>{{success}}</span><br>
                      </div>
                    {{/if}}

                    {{#if warning}}
                      <div class="alert alert-warning alert-dismissible fade show">
                      <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <span>{{warning}}</span><br>
                      </div>
                    {{/if}}

                    {{#if error}}
                      <div class="alert alert-danger alert-dismissible fade show">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                          {{#each error}}
                            <span>- {{msg}}</span><br>
                          {{/each}}
                      </div>
                    {{/if}}
                  </div>
                <div class="col-12" id="error_message">
                    
                </div>  
              </div>
              <form role="form" action="/warehouse/warehouse-replenish" method="POST" id="add_products">
                <div class="row">

                  <div class="col-md-3">
                      <div class="form-group">
                        <label>Название продукта</label>
                        <input  id="nameAutoComplete" type="search" dir="ltr" spellcheck=false autocorrect="off" autocomplete="off" autocapitalize="off"  
                        name="product_name" class="form-control" style="color:black;"  required
                        {{#if req_values.product_name}}
                          value="{{req_values.product_name}}"
                        {{/if}}
                        >
                      </div>
                  </div>
                  
                  <div class="col-md-3">
                      <div class="form-group">
                          <label>Рисунок</label>
                          <input  id="drawingAutoComplete" type="search" dir="ltr" spellcheck=false autocorrect="off" autocomplete="off" autocapitalize="off"
                          name="drawing" class="form-control" style="color:black;" required
                          {{#if req_values.drawing}}
                            value="{{req_values.drawing}}"
                          {{/if}}
                          >
                      </div>
                  </div>
                  
                  <div class="col-md-1">
                      <div class="form-group">
                          <label for="quantity">Сорт</label>
                          <input type="number" name="sort" id="sort" class="form-control" style="color:black;" min="1" max="5" autocomplete="off" required
                          {{#if req_values.sort}}
                            value="{{req_values.sort}}"
                          {{/if}}
                          >
                      </div>
                  </div>

                  <div class="col-md-2">
                    <div class="form-group">
                      <label for="">Доп. услуга</label>
                      <select name="service" id="service" class="form-control select2" style="color:black;" required>
                        <option disabled="disabled" selected="selected" style="display:none;" >Выберите один из них</option>
                        <option class="font-weight-bold" value="0">БЕЗ УСЛУГ</option>
                        {{#each services}}
                        <option value="{{id}}">{{name}}  - {{price}} (UZS)</option>
                        {{/each}}
                      </select>
                    </div>  
                  </div> 

                  <div class="col-3">
                    <div class="form-group">
                      <label>Код </label>
                      <input  id="codeAutoComplete" type="search" dir="ltr" spellcheck=false autocorrect="off" autocomplete="off" autocapitalize="off"
                      name="overall_code" class="form-control" style="color:black;"  min="6" max="6" required>
                    </div>
                  </div>
                  
                </div>

                <hr>

                <div class="row">
                  <div class="col-3">
                    <div class="form-group">
                      <label>Цена (UZS)</label>
                      <input type="number" name="price" id="price" class="form-control" min="1" style="color:black;" autocomplete="off" readonly>
                    </div>
                  </div>
                  <div class="col-3">
                    <div class="form-group">
                      <label>Кол-во</label>
                      <input type="number" name="added_quantity" id="added_quantity" class="form-control" min="1" style="color:black;" autocomplete="off" required> 
                    </div>
                  </div>
                  <div class="col-3">
                    <div class="form-group">
                      <label for="quantity">Итого (UZS)</label>
                      <input type="number" name="overall_sum" id="overall_sum" class="form-control" min="1" style="color:black;" autocomplete="off" readonly> 
                    </div>
                  </div>
                  <div class="col-3">
                    <div class="form-group">
                      <label for="date">Дата</label>
                      <input type="date"  name="added_date" id="date" class="form-control" placeholder="Дата" style="color:black;" required>
                    </div>
                  </div>
                </div>
                <div class="row">
                  <div class="col-2">
                    <div class="form-group">
                      <input type="submit" name="submit" class="btn btn-success swalDefaultSuccess" value="Добавить">
                    </div>
                  </div>
                </div>
              </form>
            </div>
        </div>
      </div>
    </div>
  </div>
</div>
  
  
<script src="/dist/js/adminlte.min.js"></script>
<script src="/plugins/jquery/jquery.min.js"></script>
<script src="/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="/dist/js/adminlte.js"></script>
<script src="/plugins/select2/js/select2.full.min.js"></script>
<script src="/plugins/datatables/jquery.dataTables.min.js"></script>
<script src="/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
<script src="/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
<script src="/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
<script src="/dist/js/autocomplete/autoComplete.js"></script>
<script src="/dist/js/autocomplete/autoComplete.min.js"></script>

<script>
  const getProducts = async searchProduct =>
  {
    const response = await fetch('/product/product-search');
    products = await response.json();
    

    let product_names = products.map(product => product.product_name);
    let uniq_products = [...new Set(product_names)];

    const autoCompleteJS = new autoComplete({
        selector: "#nameAutoComplete",
        data: {
            src: uniq_products,
            cache: true,
        },
        resultItem: {
            highlight: true
        },
        resultsList: {
          element: (list, data) => {
            if (!data.results.length) {
              const message = document.createElement("div");
              message.setAttribute("class", "no_result");
              message.innerHTML = `<span style="padding:10px;color:red">Не найдено результатов для "${data.query}"</span>`;
              list.prepend(message);
            }
          },
          noResults: true,
        },
        searchEngine: "loose",
        events: {
            input: {
                selection: (event) => {
                  const selection = event.detail.selection.value;
                  autoCompleteJS.input.value = selection;

                    
                }
            }
        }
    });      

    let drawings = products.map(product => product.drawing);
    let uniq_drawings = [...new Set(drawings)];

    const drawingAutoComplete = new autoComplete({
      selector: "#drawingAutoComplete",
      data: {
        src: uniq_drawings,
        cache: true,
      },
      resultItem: {
        highlight: true,
      },
      resultsList: {
        element: (list, data) => {
          if (!data.results.length) {
            const message = document.createElement("div");
            message.setAttribute("class", "no_result");
            message.innerHTML = `<span style="padding:10px;color:red">Не найдено результатов для "${data.query}"</span>`;
            list.prepend(message);
          }
        },
        noResults: true,
      },
      searchEngine: "loose",
      events: {
        input: {
          selection: (event) => {
            const selection = event.detail.selection.value;
            drawingAutoComplete.input.value = selection;

          }
        }
      }
    });

    let overall_codes = products.map(product=> product.overall_code);

    const codeAutoComplete = new autoComplete({
      selector: "#codeAutoComplete",
      data: {
        src: overall_codes,
        cache: true,
      },
      resultItem: {
        highlight: true,
      },
      resultsList: {
        element: (list, data) => {
            if (!data.results.length) {
                const message = document.createElement("div");
                message.setAttribute("class", "no_result");
                message.innerHTML = `<span style="padding:10px;color:red">Не найдено результатов для "${data.query}"</span>`;
                list.prepend(message);
            }
        },
        noResults: true,
      },
      searchEngine: "strict",
      events: {
        input: {
          selection: (event) => {
            const selection = event.detail.selection.value;
            codeAutoComplete.input.value = selection;

            const selected_name = document.getElementById('nameAutoComplete').value;
            const selected_drawing = document.getElementById('drawingAutoComplete').value;
            const selected_sort = document.getElementById('sort').value;
            const selected_service = document.getElementById('service').value;    
    

            products.map(product =>{

              if( codeAutoComplete.input.value == product.overall_code)
              {
                document.getElementById('nameAutoComplete').value = product.product_name;
                document.getElementById('drawingAutoComplete').value = product.drawing;
                document.getElementById('sort').value = product.sort;
                if(product.AdditionalServiceId == null)
                {
                  document.getElementById('service').value = '0';
                }
                else
                {
                  document.getElementById('service').value = product.AdditionalServiceId;
                }
                
                document.getElementById('price').value = product.price;
              


              
              }

            })


          }
        }
      }
      });

  }

  getProducts();
</script>



<script>
  var selected_name = document.getElementById('nameAutoComplete');
  var selected_drawing = document.getElementById('drawingAutoComplete');
  var selected_sort = document.getElementById('sort');
  var selected_service = document.getElementById('service');    
  var quantity = document.getElementById('added_quantity');

  const getProduct = async () => {
    const response = await fetch('/product/product-search');
    products = await response.json();
    let service = selected_service.value == 0 ? null : selected_service.value;
    var find = false;
    var searching_product_id;
    var searching_product_price;
    var searching_product_code;

  
    for(let i=0; i<products.length; i++)
    {
      if(selected_name.value == products[i].product_name) 
      {
        if(selected_drawing.value == products[i].drawing) 
        { 
          if(selected_sort.value == products[i].sort)
          {
            if(service == products[i].AdditionalServiceId)
            {
              find = true;
              searching_product_id = products[i].id;
              searching_product_price = products[i].price;
              searching_product_code = products[i].overall_code;

            }
          }
        }          
      }
    }
  
    if(find)
    {
      console.log('Yes you found it!');
      document.getElementById('codeAutoComplete').value = searching_product_code;
      document.getElementById('price').value = searching_product_price;
      document.getElementById('overall_sum').value = searching_product_price * quantity.value;
      document.getElementById('error_message').innerHTML ='';
    }
    else
    {
      console.log('No you dont found');
      document.getElementById('codeAutoComplete').value = '';
      document.getElementById('price').value = '';
      document.getElementById('error_message').innerHTML = 
      `
      <div class="alert alert-danger alert-dismissible fade show">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <span> Товар не найден, проверьте введенную информацию еще раз! </span>
      </div>
      `;
    }

    

  }

  

  selected_drawing.addEventListener('input', () => getProduct());
  selected_sort.addEventListener('input', () => getProduct());
  selected_service.addEventListener('change', () => getProduct());
  quantity.addEventListener('input', () => getProduct());
  selected_name.addEventListener('input', () => getProduct());



</script>


<script>
  $(function () {
    $("#warehouseTable").DataTable({
      "responsive": true,
      "autoWidth": false,
    });
  });
</script>

    
